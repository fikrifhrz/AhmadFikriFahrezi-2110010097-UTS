/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.io.FileWriter;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class AplikasiKeuanganPribadi extends javax.swing.JFrame {

    /**
     * Creates new form AplikasiKeuanganPribadi
     */
    public AplikasiKeuanganPribadi() {
        initComponents();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tgl = new com.toedter.calendar.JDateChooser();
        cbKategori = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listSumberUang = new javax.swing.JList<>();
        tfUangMasuk = new javax.swing.JTextField();
        tfUangKeluar = new javax.swing.JTextField();
        tfSisa = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        taKeterangan = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnHitung = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Aplikasi Keuangan Pribadi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Tanggal");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Kategori");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Sumber Uang");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Uang Masuk");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Uang Keluar");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Sisa Uang");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Keterangan");

        cbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jajan", "Top Up Game", "Uang Saku" }));
        cbKategori.setMinimumSize(new java.awt.Dimension(88, 22));

        listSumberUang.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Cash", "Dana", "Gopay" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listSumberUang);

        taKeterangan.setColumns(20);
        taKeterangan.setRows(5);
        jScrollPane3.setViewportView(taKeterangan);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tanggal", "Kategori", "Sumber Uang", "Uang Masuk", "Uang Keluar", "Sisa", "Keterangan"
            }
        ));
        jScrollPane1.setViewportView(table);

        btnHitung.setBackground(new java.awt.Color(255, 51, 51));
        btnHitung.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHitung.setForeground(new java.awt.Color(255, 255, 255));
        btnHitung.setText("Hitung");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });

        btnTambah.setBackground(new java.awt.Color(255, 51, 51));
        btnTambah.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(255, 255, 255));
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnSimpan.setBackground(new java.awt.Color(255, 51, 51));
        btnSimpan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSimpan.setForeground(new java.awt.Color(255, 255, 255));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 51, 51));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 51, 51));
        btnHapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 51, 51));
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnKeluar.setBackground(new java.awt.Color(255, 51, 51));
        btnKeluar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKeluar.setForeground(new java.awt.Color(255, 255, 255));
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnTambah)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSimpan))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnKeluar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(tfUangKeluar, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfUangMasuk, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tgl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbKategori, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tfSisa, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHitung)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfUangMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfUangKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfSisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(btnHitung))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTambah)
                            .addComponent(btnSimpan)
                            .addComponent(btnEdit)
                            .addComponent(btnHapus)
                            .addComponent(btnClear))
                        .addGap(42, 42, 42))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKeluar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
        // Mengambil nilai dari teks field uang masuk dan uang keluar, dan mengonversinya ke dalam tipe data double
        double uangMasuk = Double.parseDouble(tfUangMasuk.getText());
        double uangKeluar = Double.parseDouble(tfUangKeluar.getText()); 
        double sisaUang = uangMasuk - uangKeluar; // Menghitung sisa uang dengan mengurangkan uang keluar dari uang masuk
        tfSisa.setText(String.valueOf(sisaUang)); // Menetapkan nilai sisa uang ke dalam teks field tfSisa
    }//GEN-LAST:event_btnHitungActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel(); 
        // Mendapatkan nilai dari komponen GUI dan mengonversinya ke dalam tipe data yang sesuai
        SimpleDateFormat tngl = new SimpleDateFormat("yyyy-MM-dd"); 
        String tanggal = tngl.format(tgl.getDate()); // Mengambil tanggal dari komponen tgl
        String kategori = cbKategori.getSelectedItem().toString(); //  Mengambil kategori dari combo box
        String sumberuang = listSumberUang.getSelectedValue(); // Mengambil sumber uang dari list
        String uangmasuk = tfUangMasuk.getText(); // Mengambil nilai uang masuk dari teks field
        String uangkeluar = tfUangKeluar.getText(); // Mengambil nilai uang keluar dari teks field 
        String sisa = tfSisa.getText(); // Mengambil nilai sisa dari teks field
        String keterangan = taKeterangan.getText();  // Mengambil keterangan dari area teks
        
        // Memeriksa apakah ada kolom yang kosong atau hanya berisi spasi
        if  (tanggal.trim().isEmpty() || (kategori.isEmpty() || 
            sumberuang.isEmpty() || uangmasuk.isEmpty() || 
            uangkeluar.isEmpty() || sisa.isEmpty() || 
            keterangan.isEmpty())) {
        JOptionPane.showMessageDialog(rootPane, "Semua kolom harus diisi sebelum menambah Data!");
        return; // Menghentikan eksekusi metode jika ada kolom yang kosong
        }
        model.addRow(new Object[]{tanggal, kategori, sumberuang, uangmasuk, uangkeluar, sisa, keterangan}); // Menambahkan baris baru ke dalam tabel
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel(); 
        // Mendapatkan nilai dari komponen GUI dan mengonversinya ke dalam tipe data yang sesuai
        SimpleDateFormat tngl = new SimpleDateFormat("yyyy-MM-dd"); 
        String tanggal = tngl.format(tgl.getDate()); // Mengambil tanggal dari komponen tgl
        String kategori = cbKategori.getSelectedItem().toString(); //  Mengambil kategori dari combo box
        String sumberuang = listSumberUang.getSelectedValue(); // Mengambil sumber uang dari list
        String uangmasuk = tfUangMasuk.getText(); // Mengambil nilai uang masuk dari teks field
        String uangkeluar = tfUangKeluar.getText(); // Mengambil nilai uang keluar dari teks field 
        String sisa = tfSisa.getText(); // Mengambil nilai sisa dari teks field
        String keterangan = taKeterangan.getText();  // Mengambil keterangan dari area teks
        
        // Memeriksa apakah ada kolom yang kosong atau hanya berisi spasi
        if  (tanggal.trim().isEmpty() || (kategori.isEmpty() || 
            sumberuang.isEmpty() || uangmasuk.isEmpty() || 
            uangkeluar.isEmpty() || sisa.isEmpty() || 
            keterangan.isEmpty())) {
        JOptionPane.showMessageDialog(rootPane, "Semua kolom harus diisi sebelum menambah Data!");
        return; // Menghentikan eksekusi metode jika ada kolom yang kosong
        }
        
        try { // Menulis data ke dalam file teks
        FileWriter Keuangan = new FileWriter("Data Keuangan Pribadi.txt", true); // Menulis data ke dalam file teks
            Keuangan.write("Tanggal: " + tanggal); 
            Keuangan.write(System.getProperty("line.separator"));
            Keuangan.write("Kategori: " + kategori);
            Keuangan.write(System.getProperty("line.separator"));
            Keuangan.write("Sumber Uang: " + sumberuang);
            Keuangan.write(System.getProperty("line.separator"));
            Keuangan.write("Uang Masuk: " + uangmasuk);
            Keuangan.write(System.getProperty("line.separator"));
            Keuangan.write("Uang Keluar: " + uangkeluar);
            Keuangan.write(System.getProperty("line.separator"));
            Keuangan.write("Sisa: " + sisa);
            Keuangan.write(System.getProperty("line.separator"));
            Keuangan.write("Keterangan: " + keterangan);
            Keuangan.write(System.getProperty("line.separator"));
        Keuangan.close();
        
        JOptionPane.showMessageDialog(rootPane, "Data Anda Berhasil Disimpan Ke Format .Txt!");
        } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int selectedRow = table.getSelectedRow(); // Mendapatkan baris yang dipilih oleh pengguna di dalam tabel
        // Memeriksa apakah ada baris yang dipilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(rootPane, "Pilih baris yang ingin diubah!");
            return; // Menghentikan eksekusi metode jika tidak ada baris yang dipilih
       }
        
        SimpleDateFormat tngl = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = tngl.format(tgl.getDate());
        String kategori = cbKategori.getSelectedItem().toString();
        String sumberuang = listSumberUang.getSelectedValue();
        String uangmasuk = tfUangMasuk.getText();
        String uangkeluar = tfUangKeluar.getText();
        String sisa = tfSisa.getText();
        String keterangan = taKeterangan.getText();
        
        // Memeriksa apakah ada kolom yang kosong atau hanya berisi spasi
        if  (tanggal.trim().isEmpty() || (kategori.isEmpty() || 
            sumberuang.isEmpty() || uangmasuk.isEmpty() || 
            uangkeluar.isEmpty() || sisa.isEmpty() || 
            keterangan.isEmpty())) {
        JOptionPane.showMessageDialog(rootPane, "Semua kolom harus diisi sebelum menambah Data!");
        return; // Menghentikan eksekusi metode jika ada kolom yang kosong
        }
        
        // Mengubah nilai di dalam tabel dengan nilai yang baru
        table.setValueAt(tanggal, selectedRow, 0);
                table.setValueAt(kategori, selectedRow, 1);
                table.setValueAt(sumberuang, selectedRow, 2);
                table.setValueAt(uangmasuk, selectedRow, 3);
                table.setValueAt(uangkeluar, selectedRow, 4);
                table.setValueAt(sisa, selectedRow, 5);
                table.setValueAt(keterangan, selectedRow, 6);
             
            JOptionPane.showMessageDialog(rootPane, "Data berhasil diubah!"); // Memberitahu bahwa data berhasil diubah
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int selectedRow = table.getSelectedRow();
        
        if (selectedRow == -1) {
        JOptionPane.showMessageDialog(rootPane, "Pilih baris yang ingin dihapus!");
        return;
    }
        int confirmDialogResult = JOptionPane.showConfirmDialog(rootPane, "Apakah Anda yakin ingin menghapus baris ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION); // Menampilkan dialog konfirmasi untuk memastikan pengguna ingin menghapus baris
        // Memeriksa apakah pengguna mengonfirmasi untuk menghapus baris
        if (confirmDialogResult == JOptionPane.YES_OPTION) {
        // Menghapus baris dari model tabel
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.removeRow(selectedRow);
        JOptionPane.showMessageDialog(rootPane, "Data berhasil dihapus!"); // Memberitahu bahwa data berhasil dihapus
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        tgl.getDateFormatString(); // Mengatur format string tanggal ke nilai default
        // Mengosongkan pilihan pada komponen-komponen GUI
        cbKategori.setSelectedItem(null); // Mengosongkan pilihan pada combo box kategori
        listSumberUang.setSelectedValue(null, rootPaneCheckingEnabled); // Mengosongkan nilai yang dipilih pada list sumber uang dengan opsi rootPaneCheckingEnabled
        tfUangMasuk.setText(""); // Mengosongkan teks field uang masuk
        tfUangKeluar.setText(""); // Mengosongkan teks field uang keluar
        tfSisa.setText(""); // Mengosongkan teks field sisa
        taKeterangan.setText(""); // Mengosongkan area teks keterangan
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
         System.exit(0);
    }//GEN-LAST:event_btnKeluarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AplikasiKeuanganPribadi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AplikasiKeuanganPribadi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AplikasiKeuanganPribadi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AplikasiKeuanganPribadi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AplikasiKeuanganPribadi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnHitung;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cbKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listSumberUang;
    private javax.swing.JTextArea taKeterangan;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfSisa;
    private javax.swing.JTextField tfUangKeluar;
    private javax.swing.JTextField tfUangMasuk;
    private com.toedter.calendar.JDateChooser tgl;
    // End of variables declaration//GEN-END:variables
}
